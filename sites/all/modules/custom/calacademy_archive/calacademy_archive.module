<?php

define('CALACADEMY_ARCHIVE_DEBUG', false);

function calacademy_archive_submit_callback(&$form, $form_state) {
  variable_set('calacademy_archive_progress', 0);

  // iterate vocab
  $vocab = taxonomy_vocabulary_machine_name_load('tanks_and_displays');
  $tree = taxonomy_get_tree($vocab->vid, 0, NULL, true);

  $selectedTanks = [];

  foreach ($tree as $term) {
    if ($term->depth === 0) continue;

    $val = $form_state['values']['calacademy_archive_' . $term->tid];

    if ($val === 1) {
      // tank selected
      $selectedTanks[] = $term;
    }
  }

  // start archiving
  $i = 0;
  $total = count($selectedTanks);

  foreach ($selectedTanks as $tank) {
    _calacademy_archive_create($tank->tid, trim(strtolower($tank->name)));
    $i++;

    // increment progress
    $per = floor(($i / $total) * 100);
    variable_set('calacademy_archive_progress', $per);
  }
  
  // done
  $msg = 'Done archiving ' . $total . ' tank';
  if ($total > 1) $msg .= 's';
  
  return '<div><strong>' . $msg . '</strong></div>';
}

function calacademy_archive_progress() {
    $progress = array(
        'message' => t('Start archivingâ€¦'),
        'percentage' => 0,
    );

    $per = variable_get('calacademy_archive_progress');

    if ($per){
      $progress = array(
        'message' => t('Archivingâ€¦'),
        'percentage' => $per,
      );
    }

    drupal_json_output($progress);
}

function calacademy_archive_menu() {
  $items['archive/progress'] = array(
    'title' => t('Archive progress'),
    'page callback' => 'calacademy_archive_progress',
    'access callback' => 'user_is_logged_in',
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/calacademy_archive'] = array(
    'title' => 'CalAcademy Archive',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('calacademy_archive_admin_settings'),
    'access arguments' => array('administer users'),
    'file' => 'calacademy_archive.admin.inc',
  );

  return $items;
}

function calacademy_archive_entity_postsave($entity, $entity_type) {
  if ($entity_type != 'taxonomy_term') return;

  switch ($entity->vocabulary_machine_name) {
    case 'tanks_and_displays':
      _calacademy_archive_create($entity->tid, trim(strtolower($entity->name)));
      break;
  }
}

function calacademy_archive_node_postsave($node) {
  // skip if wrong type or not published
  if ($node->type != 'organism' || $node->status != NODE_PUBLISHED) return;

  // no values
  if (_calacademy_archive_is_empty($node->field_tank_or_display)) return;

  $tids = $node->field_tank_or_display['und'];
  
  foreach ($tids as $tid) {
      // get info for each tank specified
      $term = taxonomy_term_load($tid['tid']);

      if ($term === FALSE) continue;

      // @todo
      // error handling
      _calacademy_archive_create($term->tid, trim(strtolower($term->name)));        
  }
}

function _calacademy_archive_get_file_uri () {
  return file_create_url(file_default_scheme() . '://');
}

function _calacademy_archive_is_empty($arr) {
    if (!is_array($arr)) return true;
    if (count($arr) == 0 || !isset($arr['und'])) return true;
    if (count($arr['und']) == 0) return true;

    return false;
}

function _calacademy_archive_get_stripped_query($path) {
  $arr = explode('?', $path, 2);
  return $arr[0];
}

function _calacademy_archive_get_content_data($src) {
  $strippedSrc = _calacademy_archive_get_stripped_query($src);

  $assetDir = 'assets/';
  $fileUri = _calacademy_archive_get_file_uri();
  $fileDir = file_default_scheme() . '://';

  return array(
    'url' => $src,
    'src' => str_replace($fileUri, $fileDir, $strippedSrc),
    'target' => $assetDir . str_replace($fileUri, '', $strippedSrc)
  );
}

function _calacademy_archive_get_assets($nodes, $themes) {
  // create an array of media assets to package
  $content = array();

  foreach ($nodes as $node) {
    $node = $node->node;

    // specimen image
    if ($node->image_raw) {
      $content[] = _calacademy_archive_get_content_data($node->image_raw[0]->src);
    }

    // specimen image (crop)
    if ($node->field_image) {
      $content[] = _calacademy_archive_get_content_data($node->field_image[0]->src);
    }

    // specimen image crop
    if ($node->field_image_square_crop) {
      $content[] = _calacademy_archive_get_content_data($node->field_image_square_crop[0]->src);
    }

    // video
    if (!empty($node->video)) {
      $content[] = _calacademy_archive_get_content_data($node->video);
    }
  }

  foreach ($themes as $theme) {
    $node = $theme->node;

    if (is_array($node->ebu_images)) {
      foreach ($node->ebu_images as $ebuImg) {
        $content[] = _calacademy_archive_get_content_data($ebuImg->src);
      }
    }

    if (is_array($node->parent_ebu_images)) {
      foreach ($node->parent_ebu_images as $ebuImg) {
        $content[] = _calacademy_archive_get_content_data($ebuImg->src);
      }
    }

    if (is_string($node->field_taxa_images)) {
      try {
        $doc = phpQuery::newDocumentXML($node->field_taxa_images);
      } catch (Exception $e) {
        try {
          $doc = phpQuery::newDocumentHTML($node->field_taxa_images);
        } catch (Exception $e2) {
          continue;
        }
      }

      foreach ($doc['img'] as $img) {
        $src = pq($img)->attr('src');
        $content[] = _calacademy_archive_get_content_data($src);
      }
    }
  }

  // convert drupal paths to file system paths
  foreach ($content as $key => $val) {
    $content[$key]['src'] = drupal_realpath($val['src']);
  }

  return $content;
}

function _calacademy_archive_create($tid, $tankName) {
  // create tmp dir if it doesn't already exist
  $filesPath = drupal_realpath(file_default_scheme() . '://');
  $tmp = $filesPath . '/touchscreen-archives';

  if (!file_exists($tmp)) {
    if (drupal_mkdir($tmp) === false) {
      return false;
    }
  }

  global $base_url;
  
  // load and append json
  $tanks = json_decode(file_get_contents($base_url . '/display-list'));
  $tanks->selected_tank = $tankName;

  $tankContents = json_decode(file_get_contents($base_url . '/displays/' . $tid . '/json'));
  
  $themes = json_decode(file_get_contents($base_url . '/exhibit-theme-list'));
  $themes->fileUri = _calacademy_archive_get_file_uri();

  $json = array(
    'themes' => json_encode($themes),
    'tanks' => json_encode($tanks),
    'content' => json_encode($tankContents) 
  );

  // validate json
  foreach ($json as $val) {
    if ($val === false) return false;  
  }

  // parse content
  $content = json_decode($json['content']);
  if ($content === NULL || !is_array($content->nodes)) return false;
  $content = _calacademy_archive_get_assets($content->nodes, $themes->nodes);

  // create archive
  global $user;
  global $base_url;
  
  $target = drupal_realpath(DRUPAL_ROOT . '/preview/touchscreen');
  $author = empty($user->mail) ? 'anonymous' : $user->mail;
  
  $foo = new CreateZip($target, $author, $base_url);

  if (!CALACADEMY_ARCHIVE_DEBUG) $foo->delete($tankName);
  $foo->setTempDirectory(realpath($tmp));
  $foo->setJSON($json);
  $foo->addContent($content);

  $path = $foo->getPath(date('Ymd') . '_' . $tankName . '.zip');
  if ($path === false) return false;

  if (CALACADEMY_ARCHIVE_DEBUG) return true;

  // upload
  if ($foo->upload($path)) {
    // delete local
    unlink($path);

    // create and upload index
    return $foo->setIndex();
  }

  return false;
}
